// Generated Hypocycloid Ring Configuration
const RINGS = [
  { label: "Career", cusps: 3, R: 142, color: "#ff6b6b" },
  { label: "Health", cusps: 4, R: 99, color: "#feca57" },
  { label: "Social", cusps: 5, R: 47, color: "#48dbfb" },
  { label: "Personal", cusps: 6, R: 150, color: "#1dd1a1" },
  { label: "BabelEvents", cusps: 2, R: 160, color: "#5f27cd" }
];

// Ticking Hand Configuration
const HAND_SETTINGS = {
  tickInterval: 1,   // seconds between movements
  handLength: 178,       // length of the hand
  handColor: "#ffffff",       // hand color
  handWidth: 1,         // hand thickness
  enabled: true,             // hand animation enabled
  rotationSpeed: 1  // degrees per tick
};

// Hypocycloid generation function
function generateHypocycloid(R, cusps, steps = 720) {
  const r = R / cusps;
  const pts = [];
  for (let i = 0; i <= steps; i++) {
    const t = (Math.PI * 2 * i) / steps;
    const x = (R - r) * Math.cos(t) + r * Math.cos(((R - r) / r) * t);
    const y = (R - r) * Math.sin(t) - r * Math.sin(((R - r) / r) * t);
    pts.push([x, y]);
  }
  return pts;
}

// Hand tick logic
function animateHand(currentTime, currentPoint, lastTickTime, boardPoints) {
  if (!lastTickTime) lastTickTime = currentTime;
  const deltaTime = currentTime - lastTickTime;
  
  if (HAND_SETTINGS.enabled && HAND_SETTINGS.tickInterval > 0) {
    if (deltaTime >= HAND_SETTINGS.tickInterval * 1000) {
      currentPoint = (currentPoint + 1) % HAND_SETTINGS.totalPoints;
      lastTickTime = currentTime;
      
      // Trigger event when hand lands on point
      if (boardPoints[currentPoint]) {
        onHandLandedOnPoint(boardPoints[currentPoint]);
      }
    }
  }
  
  return { currentPoint, lastTickTime };
}

// Mathematical ratios for current configuration:
// Career: R:r = 3:1 (3-cusp hypocycloid)
// Health: R:r = 4:1 (4-cusp hypocycloid)
// Social: R:r = 5:1 (5-cusp hypocycloid)
// Personal: R:r = 6:1 (6-cusp hypocycloid)
// BabelEvents: R:r = 2:1 (2-cusp hypocycloid)